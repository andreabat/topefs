<div id="budget-grid"></div>
<script type="text/javascript">
//<![CDATA[
          var budget_datastore = new Ext.data.Store({
                  proxy: new Ext.data.HttpProxy({
                             url: '/budgets?format=ext_json',
                             method: 'GET'
                         }),
                  reader: new Ext.data.JsonReader({
                              root: 'budgets',
                              id: 'id',
                              totalProperty: 'results'
                          },
                          [ {name: 'id', mapping: 'id'},
						  {name: 'budget[title]', mapping: 'title'},
						   {name:"budget[login]",mapping:'user.login'},
						   {name:"budget[total_budget_costs]",mapping:'total_budget_costs'},
						   {name:"budget[total_budget_pricing]",mapping:'total_budget_pricing'},
						   {name:"budget[total_budget_invoices]",mapping:'total_budget_invoices'},
						   {name: 'budget[project_id]', mapping: 'project_id'},{name: 'budget[user_id]', mapping: 'user_id'},{name: 'budget[created_at]', mapping: 'created_at'},{name: 'budget[updated_at]', mapping: 'updated_at'} ]),
                  // turn on remote sorting
                  remoteSort: true,
                  sortInfo: {field: 'id', direction: 'ASC'}
              });

//]]>
</script>
<% javascript_tag do -%>
  var budget_column_model = new Ext.grid.ColumnModel([
    {id: 'id', header: "#", width: 20, dataIndex: 'id'},
	
	is_iframe?{hidden:true}:
	{id: 'bg',hidden:true, header: "Progetto", width: 20, renderer:function(a,b,r){return "<a href='/projects/" + r.get("budget[project_id]") + "'>vai</a>"}},
	{id:'tit',header: 'Titolo', dataIndex: 'budget[title]'},
	{id:'ctt',header: 'Ordini', dataIndex: 'budget[total_budget_costs]',renderer:Ext.util.Format.euroMoney},
    {id:'ptt',header: 'Offerte', dataIndex: 'budget[total_budget_pricing]',renderer:Ext.util.Format.euroMoney},
	{id:'ftt',header: 'Fatture', dataIndex: 'budget[total_budget_invoices]',renderer:Ext.util.Format.euroMoney},
	{header: 'Ultimo Utente', dataIndex: 'budget[login]'},
	
    {header: 'Data Ultima Modifica', dataIndex: 'budget[updated_at]',renderer: Ext.util.Format.dateRenderer('d/m/Y H:i:s')}
  ]);
<% end -%>
<script type="text/javascript">
//<![CDATA[

function budget_new(obj){
	var dop = new Ext.Window({
                title: 'Titolo da assegnare al budget',
				animateTarget:obj,
					width:250,
					height:110,
                items: [{
					text: "Titolo"
				},{
                    xtype: "textfield",
                    id: 'budget[title]',
					allowBlank:false,
					maxLength:50
					
                }],
                buttons: [{
                    text: "ok",
                    handler: function(f, b){
                        if (Ext.getCmp("budget[title]").validate()) {
                            //chiamata AJAX
							 var tit = Ext.getCmp("budget[title]").getValue();
                              Ext.Ajax.request({
                                  url: '/budgets/new?project_id=<%=params[:project_id]%>&name=' + tit,
                                  success: function(a, b, c){
									  budget_datastore.load();
                                      var o = Ext.decode(a.responseText);
                                      add_tab('/budgets/' + o.budget_id + '/edit', '<%=:a_show.localize << " " << :l_budget.localize%> ' + tit);
                                  },
                                  failure: function(){
                                      alert("fallito.");
                                  }
                              });
							  
							dop.close();
                        }
                    }
                }]
            
            
            });
			dop.show();
	
	
}
function budget_copy(selected,obj){
	
	var dop = new Ext.Window({
                title: 'Titolo da assegnare al budget',
				animateTarget:obj,
					width:250,
					height:110,
                items: [{
					text: "Titolo"
				},{
                    xtype: "textfield",
                    id: 'budget[title]',
					allowBlank:false,
					maxLength:50,
					value:"Copia di " + selected.data["budget[title]"]
					
                }],
                buttons: [{
                    text: "ok",
                    handler: function(f, b){
                        if (Ext.getCmp("budget[title]").validate()) {
                            //chiamata AJAX
							 var tit = Ext.getCmp("budget[title]").getValue();
							  
                             Ext.Ajax.request({
												url:'/budgets/new?project_id=<%=params[:project_id]%>&from=' + selected.data.id + "&name=" + tit ,
												success:function(a,b,c){
													budget_datastore.reload();
													var o = Ext.decode(a.responseText);
													add_tab('/budgets/' + o.budget_id + '/edit','<%=:a_show.localize << " " << :l_budget.localize %> ' + o.budget_id,"icon_book");
												},
												failure:function(){
													alert("fallito.");
												}
												})
							  
							dop.close();
                        }
                    }
                }]
            
            
            });
			dop.show();
	
	
}
function add_tab(x,y,z){
	parent.add_tab(x,y,z)
}
          Ext.onReady(function(){

              Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
              Ext.QuickTips.init();

              var ds = budget_datastore;

              var cm = budget_column_model;
              cm.defaultSortable = true;

              // create the grid
              var grid = new Ext.grid.GridPanel({
                  ds: ds,
                  cm: cm,
                  loadMask:true,
                  sm: new Ext.grid.RowSelectionModel({singleSelect:true}),
                  renderTo:   'budget-grid',
                  title:      '<%= :listing.l + " " +  :l_budget.l%>',
                  id:         null,
                  width:      540,
                  height:     208,
                  stripeRows: true,
                  viewConfig: {
                      forceFit:true
                  },

                  // inline toolbars
                  tbar:[{
                      text:'<%=:grid_new.localize%>',
                      tooltip:'Create new Budget',
                      handler: function(){
					  		//prima prompt per il nome 
							budget_new(this);
					  		
							},
					  		
                      iconCls:'add'
                  }, '-',{
                      text:'Copia',
                      tooltip:'Crea da altro budget',
                      handler: function(){ 
					  		//chiamata AJAX
							//debgugge
							 var selected = grid.getSelectionModel().getSelected();
							 if(!selected) return;
								budget_copy(selected,this);
							},
					  		
                      iconCls:'add'
                  }, '-', {
                      text:'<%=:a_edit.localize%>',
                      tooltip:'Edit selected Budget',
                      handler: function(){
                                 var selected = grid.getSelectionModel().getSelected();
                                 if(selected) {
								 	add_tab('/budgets/' + selected.data.id + '/edit','<%=:a_edit.localize << " " << :l_budget.localize%> ' + selected.data.id,"icon_book");
                                 } else { 
                                   alert('<%=:grid_select_row.localize%>');
                                 }
                               },
                      iconCls:'edit'
                  }],
                  bbar: new Ext.PagingToolbar({
                            pageSize: 5,
                            store: ds,
                            displayInfo: true,
                            displayMsg: 'Record {0} - {1} of {2}',
                            emptyMsg: 'Nessun record trovato.'
                  })
                  
              });

              // show record on double-click
              grid.on('rowdblclick', function(grid, row, e) {
                add_tab(String.format('/budgets/{0}/budget/{1}' ,'<%=params[:project_id]%>', grid.getStore().getAt(row).id),'<%=:a_edit.localize%> <%=:l_budget.localize%> ' + grid.getStore().getAt(row).id,"icon_book");
              });
              ds.baseParams={fields:'',query:'',project_id:'<%=params[:project_id]%>'}
              ds.load({
                          params: { 
                                    start: 0, 
                                    limit:5 ,
                                    fields:'',
                                    query:''
                                    
                                    }
                        });

          });

//]]>
</script>
