<%= javascript_include_tag "invoice.js" %>
<%= javascript_include_tag "pricing.js" %>

<div id="pricing-grid"></div>
<script type="text/javascript">
//<![CDATA[
function add_tab(x,y){
	parent.add_tab(x,y)
}
          var pricing_datastore = new Ext.data.Store({
                  proxy: new Ext.data.HttpProxy({
                             url: '/pricings?format=ext_json',
                             method: 'GET'
                         }),
                  reader: new Ext.data.JsonReader({
                              root: 'pricings',
                              id: 'id',
                              totalProperty: 'results'
                          },
                          [ {name: 'id', mapping: 'id'},
						     {name:"pricing[code]",mapping:'code'},
							 {name:"pricing[approved]",mapping:'approved'},
						  	{name:"pricing[login]",mapping:'user.login'},
						  	{name:"pricing[title]",mapping:'title'},
							{name:"pricing[project]",mapping:'project.title'},
							{name: 'pricing[project_id]', mapping: 'project_id'},
							{name: 'pricing[user_id]', mapping: 'user_id'},
							{name: 'pricing[document_id]', mapping: 'document_id'},
							{name: 'pricing[created_at]', mapping: 'created_at'},
							{name: 'pricing[updated_at]', mapping: 'updated_at'} 
						]),
                  // turn on remote sorting
                  remoteSort: true,
                  sortInfo: {field: 'updated_at', direction: 'ASC'}
              });
			  

function approved(d,b,r){
			if (d==true){
				return "approvato";
			}else
			{
				return String.format("<a href='#' onclick='approve({0})'>approva</a>",r.get("id"));
			}
		}
function approve(id)		{
Ext.Ajax.request({
		url:"/pricings/approve/" + id,
		success:function(a){
			Ext.Msg.alert("Conferma","Preventivo approvato. Le relative voci sono ora congelate.");
			pricing_datastore.load();
			//search for budget
			 
			if (parent.Ext.getCmp("Budget")){
				parent.Ext.getCmp("Budget").iframe.getWindow().gs.load();
			}
		},
		failure:function(a){
			alert("fail" + Ext.encode(a))
		}
			
});
	
	
}
//]]>
</script>
<% javascript_tag do -%>
  var pricing_column_model = new Ext.grid.ColumnModel([
    {id: 'sh', header: "Visualizza", width: 20, renderer:function(a,b,r){return "<a target='_blank' href='/documents/show/" + r.get("pricing[document_id]") + "'>visualizza</a>"}
	},
	{id: 'op', header: "Oggetto", width: 50,dataIndex: 'pricing[title]'},
 	{id: 'ap', header: "Approvato", width: 50,dataIndex: 'pricing[approved]',renderer:approved},
	{id: 'bg', header: "Progetto", width: 20,dataIndex: 'pricing[project]'},
    {id: 'id', header: "Preventivo", width: 20, dataIndex: 'pricing[code]'},
	
    {header: 'Ultimo Utente', dataIndex: 'pricing[login]'},
    {header: 'Data Ultima Modifica', dataIndex: 'pricing[updated_at]',renderer: Ext.util.Format.dateRenderer('d/m/Y H:i:s'),hidden:true}
  ]);

 
<% end -%>
<script type="text/javascript">
//<![CDATA[
		
          Ext.onReady(function(){

//              Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
              Ext.QuickTips.init();

              var ds = pricing_datastore;

              var cm = pricing_column_model;
              cm.defaultSortable = true;

              // create the grid
              var grid = new Ext.grid.GridPanel({
                  ds: ds,
                  cm: cm,
                  loadMask:true,
                  sm: new Ext.grid.RowSelectionModel({singleSelect:true}),
                  renderTo:   'pricing-grid',
                  title:      '<%= :listing.l + " " +  :l_pricings.l%>',
                  id:         null,
                  width:      getViewPort(5).width,
                  height:     getViewPort(5).height,
                  stripeRows: true,
                  viewConfig: {
                      forceFit:true
                  },

                  // inline toolbars
                  tbar:[{
                      text:'<%=:create.localize%> <%=:l_invoice.localize%>',
                      tooltip:'Crea fattura da preventivo',
                      handler: function(){ 
					  		//chiamata AJAX
							//debgugge
							 var selected = grid.getSelectionModel().getSelected();
							 if(!selected) return;
							 var fail=false;
							 Ext.each(selected,function(sd){
							 	if (sd.get("pricing[approved]")!=true){
									fail=true;
									return;
								}
							 });
							 if(fail){
								 Ext.Msg.alert("Errore","Non Ã¨ possibile generare una fattura da un preventivo non approvato.")	;
								 return;
							 }
							 
							 
							Ext.Ajax.request({
												url:'/invoices/new_from_pricing?format=ext_json&project_id=<%=params[:project_id]%>&pricing_id=' + selected.data.id,
												success:function(a,b,c){
													 var a = Ext.decode(a.responseText);
													 create_invoice([selected],{

																					project_id:'<%=@project.id%>',
																					from_pricing:"/invoices/create_from_pricing/" + selected.data.id,
																					bank:a.bank,
																					title :a.title,
																					paymentmethods:<%=Paymentmethod.find(:all).collect {|c| [c.paymentmethod,c.id]}.to_json%>,
																					token:"<%=form_authenticity_token%>"
																					});
												},
												failure:function(){
													alert("fallito.");
												}
												})
							},
					  		
                      iconCls:'add'
                  },
				  { id: 'elimina_btn', iconCls:'icon_delete',type:"submit", text: '<%=:l_delete.localize%>',  handler:function(){
									 var selected = grid.getSelectionModel().getSelected();
		                                 if(selected) {
										  delete_pricing(selected,<%=@default_grid_page_size%>)
		                                 } else { 
		                                   alert('<%=:grid_select_row.l%>.');
		                                 }
									
									}
									
								}
				  
				  
				  ],
                  bbar: new Ext.PagingToolbar({
                            pageSize: 5,
                            store: ds,
                            displayInfo: true,
                            displayMsg: 'Record {0} - {1} of {2}',
                            emptyMsg: 'Nessun record trovato.'
                  })
                  
              });
				
              ds.baseParams={fields:'',query:'',project_id:'<%=params[:project_id]%>'<%=',pricingid:'+params[:pricingid] if params[:pricingid]%>}
              ds.load({
                          params: { 
                                    start: 0, 
                                    limit:5 ,
                                    fields:'',
                                    query:''
                                    
                                    }
                        });

          });

//]]>
</script>


<div id="invoice-win" class="x-hidden">
    <div class="x-window-header">
        Informazioni per generazione fattura
    </div>
    <div class="x-window-body">
        <div id="add-invoice">
        </div>
	</div>
</div>
