<div id="project-grid"></div>
<script type="text/javascript"> 
//<![CDATA[
          var project_datastore = new Ext.data.Store({
                  proxy: new Ext.data.HttpProxy({
                              url: '/report_projects/index?format=ext_json',
							  baseParams:{year:<%=@year%>}
                         }),
                  reader: new Ext.data.JsonReader({
                              root: 'projects',
                              id: 'id',
                              totalProperty: 'results'
                          },
                          [
						  {name: 'id', mapping: 'id'},
						  {name: 'project[status]', mapping: 'status.status_id'},
						  {name: 'project[approvedpricings]', mapping: 'approved_pricings'},
						  {name: 'project[title]', mapping: 'title'},
						  {name: 'project[start]', mapping: 'start'},
						  {name: 'project[end]', mapping: 'end'},
						  {name: 'project[customer]', mapping: 'customer.ragionesociale'},
						  {name: 'project[code]', mapping: 'code'},
						  {name: 'project[year]', mapping: 'year'}
						  ]),
                  // turn on remote sorting
                  remoteSort: true,
                  sortInfo: {field: 'id', direction: 'desc'}
              });
              function refresher(){
                      project_datastore.load({
                                                          params: {start: 0, limit:<%=@default_grid_page_size%>}
                                                          });
                                 }
              
 function preventivi_list(v,metaData, record, rowIndex,col,store){
 	
 	if(window.pippo) return
	
	
	window.pippo=true
	debugger;
	
	 
 }
 
//]]>
</script> 
<% javascript_tag do -%>
  var project_column_model = new Ext.grid.ColumnModel([
    {id: 'Codice',hidden:true, header: "#", width: 20, dataIndex: 'id'},
	{id: 'Code', header: "Job N.", width: 20, dataIndex: 'project[code]'},
    {header: 'Nome', dataIndex: 'project[title]'},
    {header: 'Cliente', dataIndex: 'project[customer]'},
	{header: 'Stato', dataIndex: 'project[status]'},
	{header: 'Preventivi',  dataIndex: 'project[approved_pricings]'}
    /*{header: 'Data Inzio', dataIndex: 'project[start]',renderer:function(v){return Ext.util.Format.dateRenderer('d/m/Y')(Date.parseDate(v,'Y-m-d'))}},
    {header: 'Data Fine', dataIndex: 'project[end]',renderer: function(v){return Ext.util.Format.dateRenderer('d/m/Y')(Date.parseDate(v,'Y-m-d'))}},
    {header: 'Note', dataIndex: 'project[note]'}*/
  ]);
<% end -%>
 
<script type="text/javascript">
//<![CDATA[
          Ext.onReady(function(){

             // Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
              Ext.QuickTips.init();

              var ds = project_datastore;

              var cm = project_column_model;
              cm.defaultSortable = true;

              // create the grid
              var grid = new Ext.grid.GridPanel({
                  ds: ds,
                  cm: cm,
                  loadMask:true,
                  sm: new Ext.grid.RowSelectionModel({singleSelect:true}),
                  renderTo:   'project-grid',
                  title:      'Elenco Commesse',
                  id:         null,
                  width:getViewPort(5).width,
				 height:getViewPort(5).height,
                  stripeRows: true,
                  viewConfig: {
                      forceFit:true
                  },

                  // inline toolbars
                  tbar:[{
                      text:'<%=:grid_new.l%>',
                      tooltip:'<%=:grid_new.l<< " " << :l_project.l%>',
                      handler: function(){ build_parent_tab('/projects/new','<%=:grid_new.l<< " " << :l_project.l%>')},
                      iconCls:'add'
                  }, '-', {
                      text:'<%=:grid_edit.l%>',
                      tooltip:'<%=:grid_edit.l<< " " << :l_project.l%>',
                      handler: function(){
                                 var selected = grid.getSelectionModel().getSelected();
                                 if(selected) {
                                  build_parent_tab('/projects/' + selected.data.id + '/edit','<%=:grid_edit.l%> ' + selected.data["project[title]"]);
                                 } else { 
                                   alert('<%=:grid_select_row.l%>.');
                                 }
                               },
                      iconCls:'edit'
                  },'-', {
                      text:'Duplica',
                      tooltip:'Duplica la commessa selezionata',
                      handler: function(){
                                 	 var selected = grid.getSelectionModel().getSelected();
                                 if(selected) {
                                	  duplicate (selected.data.id);
									  
                                 } else { 
                                	   alert('<%=:grid_select_row.l%>.');
                                 }
                               },
                      iconCls:'icon_duplicate'
                  }, {
                      text:'<%=:l_delete.l%>',
                      tooltip:'Elimina',
                      handler: function(){
					  			
                                 	 var selected = grid.getSelectionModel().getSelected();
                                 if(selected) {
								 		if(!confirm("L'operazione Ã¨ irreversibile.Proseguire ?"))return;
                                	  remove (selected.data.id);
									  
                                 } else { 
                                	   alert('<%=:grid_select_row.l%>.');
                                 }
                               },
                      iconCls:'icon_delete'
                  },'->'],
                  bbar: new Ext.PagingToolbar({
                            pageSize: <%=@default_grid_page_size%>,
                            store: ds,
                            displayInfo: true,
                            displayMsg: 'Record {0} - {1} of {2}',
                            emptyMsg: 'Nessun record trovato.'
                  })
                  ,plugins:[new Ext.ux.grid.Search({position:'top'})]
              });

              // show record on double-click
              grid.on('rowdblclick', function(grid, row, e) {
			  	build_parent_tab('/projects/' + grid.getStore().getAt(row).id + '/edit','<%=:grid_edit.l%> ' + grid.getStore().getAt(row).get("project[title]"));
              });
              ds.baseParams={fields:'',query:''}
              ds.load({
                          params: { 
                                    start:0, 
                                    limit:<%=@default_grid_page_size%> ,
                                    fields:'',
                                    query:''
                                    
                                    }
                        });

          });

//]]>
</script>