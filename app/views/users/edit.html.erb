<div id ="role-grid"/>

<div id="user-form"></div>
	
 
<% javascript_tag do -%>

  var selcm = new Ext.grid.CheckboxSelectionModel();
  
  
  
  var role_column_model = new Ext.grid.ColumnModel([
    {id: 'id', header: "#", width: 0,hidden:true, dataIndex: 'id'},
    {header: 'ruolo', dataIndex: 'name'},
	selcm
  ]);
<% end -%>
<script type="text/javascript">
//<![CDATA[
		  var array = <%=@roles.to_json%>;
		  var selected = <%=@selected%>;
          var role_datastore = new Ext.data.Store({
                  proxy: new Ext.data.MemoryProxy( array
                         ),
                  reader: new Ext.data.JsonReader({
                              id: 'id' 
                          },
                          [ {name: 'id'}, {name: 'name'}])
              });

//]]>
</script>

<script type="text/javascript">
//<![CDATA[
          Ext.onReady(function(){
			  Ext.QuickTips.init();
              // turn on validation errors beside the field globally
              Ext.form.Field.prototype.msgTarget = 'side';
             
              var ds = role_datastore;

              var cm = role_column_model;
              cm.defaultSortable = true;

              // create the grid
              var grid = new Ext.grid.GridPanel({
                  ds: ds,
                  cm: cm,
				  id: "role-grid",
				  fieldLabel:'<%=:l_roles.l%>',
                  sm: selcm,
                  title:      '<%=:l_roles.l%>',
                  width:      540,
                  height:     208,
                  stripeRows: true,
				  
                  viewConfig: {
                      forceFit:true
                  }               });

              // show record on double-click
			ds.on("load",function(){
							var selected_record=[];
												selected.pluck("role_id").each(function(r){
													selected_record.push(ds.getById(r))
												})
							
							selcm.selectRecords.defer(1000,selcm,[selected_record,true]);
							
							
							
					})

              ds.load();
 
		  var LIST_URL="/users";
		  var render_to = "user-form";2
		  

           

              var panel = new Ext.FormPanel({
                  labelWidth:   75, // label settings here cascade unless overridden
                  url:          LIST_URL,
                  frame:         true,
                  waitMsgTarget: true,
				  monitorValid:true,
                  title:         'Modifica Utente',
                  bodyStyle:     'padding:5px 5px 0',
                  width:         350,
                  defaults:      {width: 230},
                  defaultType:   'textfield',
//                renderTo:      render_to,
                  baseParams:    {authenticity_token: '<%= "#{form_authenticity_token}" %>'},
                  items: [ 
				  			{  fieldLabel: 'Username',  allowBlank: false,  xtype: 'textfield',id:'login',minLength:3,  name: 'user[login]'},
							{  fieldLabel: 'Nominativo',  allowBlank: false,  xtype: 'textfield',id:'nominativo',minLength:3,  name: 'user[nominativo]'},
							{
						    									   fieldLabel:'Costo Orario',
						    										xtype:"textfield",
						    										vtype:'numeric',
						    										name:'user[hourly_cost]'
						    								},
						    {  fieldLabel: 'Password',inputType:'password',  allowBlank: <%=@update?"false":"true"%>,  xtype: 'textfield',id:'password', minLength:4, name: 'user[password]'},
							{  fieldLabel: 'Conferma Password',inputType:'password',  allowBlank: <%=@update?"false":"true"%>,  xtype: 'textfield',minLength:4,id:'password_confirmation',  name: 'user[password_confirmation]'},
							{  fieldLabel: 'Attivo',  xtype: 'checkbox',id:'active', inputValue:1, name: 'user[active]'},
							{  xtype: 'hidden',inputValue:0, name: 'user[active]'},
							{xtype:'textfield',name:'roles',id:'roles'}
							,grid
						],
				  listeners:{
				  				 
								'clientvalidation':{
										fn:function(f,ok){
											var o  =Ext.getCmp("save_btn");
											 
											if (f.findById("password").getValue()!=f.findById("password_confirmation").getValue())
											{
												ok=false;
												f.findById("password_confirmation").markInvalid("Conferma password non coincide.")
												
											}	
											if (!f.getForm().isValid())	 ok=false;
											ok?o.enable():o.disable();	
										}
									} 
						},
                  buttons: [
				   
				   { 
				  				id:'save_btn', 
								text: 'Modifica',  
								type: 'submit',  
								handler: function(f,e){ 
								
														//creo gli item nascosti
														
														
													 
														var r = Ext.getCmp("roles");
														if(r.getValue()!="")
																	r.setValue(r.getValue().replace(",",""));
														
														panel.form.submit({ params: {
															_method: "PUT"
														},
																			success:function(a,b,c){
																				 
																						Ext.Msg.alert("System","Modificato.",function(){document.location=LIST_URL});
																						
																				
				  																	},
																			failure:function(a,b,c){
																					if(b.result)
																					{
																						Ext.Msg.alert("System","<%= :sys_error.l%>:" + $H(b.result.errors).keys().join("\n") + $H(b.result.errors).values().join("\n"));
																					}
																					else
																						Ext.Msg.alert("System","<%= :sys_error.l%>:" + b.response.responseText);
																			},
																			url:LIST_URL + '/<%=@user.id%>?format=ext_json', 
																			waitMsg:'Modifica in corso...'
																		}); 
														}
							 } 
                           ]
              });
					
					
					selcm.on("rowselect",function(sm,rowIndex,record){
								var r = Ext.getCmp("roles");
		  						r.setValue(r.getValue()+","+record.get("id"));
								
					})
					selcm.on("rowdeselect",function(sm,rowIndex,record){
		  						var r = Ext.getCmp("roles");
		  						r.setValue(r.getValue().replace(","+record.get("id"),""));
					})
					
					
										 
					panel.render(Ext.get("user-form"));
					panel.form.setValues(<%=@j_form_values%>);

					
          });

//]]>
</script>
