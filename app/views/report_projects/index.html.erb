<div id="project-grid"></div>
<script type="text/javascript"> 
//<![CDATA[
          var project_datastore = new Ext.data.Store({
                  proxy: new Ext.data.HttpProxy({
                              url: '/report_projects/index?format=ext_json',
							  baseParams:{year:<%=@year%>},
							  method:"GET"
                         }),
                  reader: new Ext.data.JsonReader({
                              root: 'projects',
                              id: 'id',
                              totalProperty: 'results'
                          },
                          [
						  {name: 'id', mapping: 'id'},
						  {name: 'project[status]', mapping: 'status.status'},
						  {name: 'project[approved_pricings]', mapping: 'approved_pricings'},
						  {name: 'project[approved_invoices]', mapping: 'approved_invoices'},
						  {name: 'project[invoice_total]', mapping: 'euro_invoice_total'},
						  {name: 'project[pricing_total]', mapping: 'euro_pricing_total'},
						  {name: 'project[mol]', mapping: 'euro_mol'},
						  {name: 'project[perc_mol]', mapping: 'perc_mol'},
						  {name: 'project[cost]', mapping: 'euro_costs_approved_invoices_total'},
						  {name: 'project[title]', mapping: 'title'},
						  {name: 'project[start]', mapping: 'start'},
						  {name: 'project[end]', mapping: 'end'},
						  {name: 'project[customer]', mapping: 'customer.ragionesociale'},
						  {name: 'project[code]', mapping: 'code'},
						  {name: 'project[year]', mapping: 'year'}
						  ]),
                  // turn on remote sorting
                  remoteSort: true,
                  sortInfo: {field: 'id', direction: 'desc'}
              });
              function refresher(){
                      project_datastore.load({
                                                          params: {start: 0, limit:<%=@default_grid_page_size%>}
                                                          });
                                 }
              
 function preventivi_list(v,metaData, record, rowIndex,col,store){
 	
 	if(window.pippo) return
	
	
	window.pippo=true
	debugger;
	
	 
 }
 
//]]>
</script> 
<% javascript_tag do -%>
  var project_column_model = new Ext.grid.ColumnModel([
    {id: 'Codice',hidden:true, header: "#", width: 20, dataIndex: 'id'},
	{id: 'Code', header: "Job N.", width: 20, dataIndex: 'project[code]'},
    {header: 'Nome', dataIndex: 'project[title]'},
    {header: 'Cliente', dataIndex: 'project[customer]'},
	{header: 'Stato', dataIndex: 'project[status]'},
	{header: 'Preventivi',  dataIndex: 'project[approved_pricings]'},
	{header: 'Importo P',  dataIndex: 'project[pricing_total]'},
	{header: 'Fatture',  dataIndex: 'project[approved_invoices]'},
	{header: 'Importo F',  dataIndex: 'project[invoice_total]'},
	{header: 'Costi',  dataIndex: 'project[cost]'},
	{header: '% MOL',  dataIndex: 'project[perc_mol]'},
	{header: 'MOL',  dataIndex: 'project[mol]'}
	
    /*{header: 'Data Inzio', dataIndex: 'project[start]',renderer:function(v){return Ext.util.Format.dateRenderer('d/m/Y')(Date.parseDate(v,'Y-m-d'))}},
    {header: 'Data Fine', dataIndex: 'project[end]',renderer: function(v){return Ext.util.Format.dateRenderer('d/m/Y')(Date.parseDate(v,'Y-m-d'))}},
    {header: 'Note', dataIndex: 'project[note]'}*/
  ]);
<% end -%>
 
<script type="text/javascript">
//<![CDATA[
          Ext.onReady(function(){

             // Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
              Ext.QuickTips.init();

              var ds = project_datastore;

              var cm = project_column_model;
              cm.defaultSortable = true;
				
				
			  var _ss = new Ext.ux.grid.Search({
				  			id:"_ss",
                              position:'top',
							  checkIndexes:['project[customer]','project[code]'],
							  searchText:'<%=:grid_search.localize%>'
                          });
			 	
              // create the grid
              var grid = new Ext.grid.GridPanel({
                  ds: ds,
                  cm: cm,
                  loadMask:true,
                  sm: new Ext.grid.RowSelectionModel({singleSelect:true}),
                  renderTo:   'project-grid',
                  title:      'Elenco Commesse',
                  id:         null,
                  width:getViewPort(5).width,
				 height:getViewPort(5).height,
                  stripeRows: true,
                  viewConfig: {
                      forceFit:true
                  },

                  // inline toolbars
                  tbar:["-",{text:"Stampa elenco",handler:function(){
									var app ="";
									 
										
									 var query = "index?format=odt&year=<%=@year%>" + app;
									 var val = _ss.field.getValue();
									 var fields = [];
						            _ss.menu.items.each(function(item) {
						                if(item.checked) {
						                    fields.push(item.dataIndex);
						                }
						            });
										if (fields.length>0){
											query+= "&fields="+escape("[\"" + fields.join("\",\"") + "\"]")
										}
									    if(val!=""){
											query+= "&query=" + val
										}
									 window.open(query);
									 
								}},
								"Anno:",
								{
									xtype:"textfield",
									width:50,
									id:"_anno",
									value:"<%=@year%>"
								},
								{
									xtype:"button",
									text:"cambia",
									handler:function(){
										document.location="index?year=" + Ext.getCmp("_anno").getValue();									
									}
								}],
								plugins:[_ss]
              });

              // show record on double-click
              
              ds.baseParams={fields:'',query:'',year:<%=@year%>}
              ds.load({
                          params: { 
                                    start:0, 
                                    limit:<%=@default_grid_page_size%> ,
									year:<%=@year%>,
                                    fields:'',
                                    query:''
                                    
                                    }
                        });

          });

//]]>
</script>
