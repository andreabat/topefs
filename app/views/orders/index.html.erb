<%= javascript_include_tag "invoice.js" %>
<%= javascript_include_tag "orders.js" %>
<div id="order-grid"></div>
<script type="text/javascript">
//<![CDATA[
          var order_datastore = new Ext.data.Store({
                  proxy: new Ext.data.HttpProxy({
                             url: '/orders?format=ext_json',
                             method: 'GET'
                         }),
                  reader: new Ext.data.JsonReader({
                              root: 'orders',
                              id: 'id',
                              totalProperty: 'results'
                          },
                          [ {name: 'id', mapping: 'id'},
						  	{name:"order[login]",mapping:'user.login'},
							{name: 'order[project_id]', mapping: 'project_id'},
							{name: 'order[code]', mapping: 'code'},
							{name: 'order[received_invoice]', mapping: 'received_invoice'},
//							{name: 'order[budget_id]', mapping: 'budget_id'},
//							{name: 'order[budget]', mapping: 'budget.title'},
							{name: 'order[project]', mapping: 'project.title'},
							{name: 'order[user_id]', mapping: 'user_id'},
							{name: 'order[document_id]', mapping: 'document_id'},
							{name: 'order[total]', mapping: 'total'},
							{name: 'order[delivery]', mapping: 'delivery'},
							{name: 'order[total_ivato]', mapping: 'total_ivato'},
							{name: 'order[notes]', mapping: 'notes'},
							{name: 'order[amount_invoice]', mapping: 'amount_invoice'},
							{name: 'order[payed_invoice]', mapping: 'payed_invoice'},
							{name: 'order[expires_invoice]', mapping: 'expires_invoice'},
							{name: 'order[created_at]', mapping: 'created_at'},
							
							{name: 'order[updated_at]', mapping: 'updated_at'} 
						]),
                  // turn on remote sorting
                  remoteSort: true,
                  sortInfo: {field: 'updated_at', direction: 'ASC'}
              });

              function budget_renderer(a, b, r){
                  return String.format("<a href='#' onclick='parent.add_tab(\"/projects/edititems/{0}\",\"{1} {0}\",\"icon_book\")'>{2}</a>", r.get("order[project_id]"), '<%=:a_edit.l << " " << :l_budget.localize%>', r.get("order[project]"));
              }
//]]>
</script>
<% javascript_tag do -%>
 
		
  var order_column_model = new Ext.grid.ColumnModel([
    
    {id: 'sh', header: "Visualizza",  width: 20, renderer:function(a,b,r){return "<a target='_blank' href='/documents/show/" + r.get("order[document_id]") + "'>visualizza</a>"}
	},
	{id: 'bg',header: "Progetto", width: 20, renderer:budget_renderer},
	{id: 'ri',header: "Ricevuta Fattura", width: 20,dataIndex:'order[received_invoice]', renderer:function(a){ return a==1?'S':'N'}},
	{id: 'pi',header: "Pagata Fattura", width: 20,dataIndex:'order[payed_invoice]', renderer:function(a){ return a==1?'S':'N'}},
    {id: 'id', header: "Ordine", width: 20, dataIndex: 'order[code]'},
	{header: 'Consegna', dataIndex: 'order[delivery]'},
    {header: 'Ultimo Utente', dataIndex: 'order[login]',hidden:true}
	/*,{header: 'Importo Fattura', dataIndex: 'order[amount_invoice]',renderer: Ext.util.Format.euroMoney,hidden:true},
	{header: 'Scadenza Fattura', dataIndex: 'order[expires_invoice]',renderer: Ext.util.Format.dateRenderer('d/m/Y'),hidden:true},
	{header: 'Data Creazione', dataIndex: 'order[created_at]',renderer: Ext.util.Format.dateRenderer('d/m/Y H:i:s'),hidden:true},
    {header: 'Data Ultima Modifica', dataIndex: 'order[updated_at]',renderer: Ext.util.Format.dateRenderer('d/m/Y H:i:s'),hidden:true}*/
  ]);
 
<% end -%>
<script type="text/javascript">
//<![CDATA[
          Ext.onReady(function(){

              Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
              Ext.QuickTips.init();
			  
              var ds = order_datastore;

              var cm = order_column_model;
              cm.defaultSortable = true;

              // create the grid
              var grid = new Ext.grid.GridPanel({
                  ds: ds,
                  cm: cm,
                  loadMask:true,
                  sm: new Ext.grid.RowSelectionModel({singleSelect:true}),
                  renderTo:   'order-grid',
                  title:      '<%= :listing.l + " " +  :l_orders.l%>',
                  id:         null,
                  width:      getViewPort(5).width,
                  height:     getViewPort(5).height,
                  stripeRows: true,
                  viewConfig: {
                      forceFit:true
                  },
				  tbar: new Ext.Toolbar({
				  	items:[
								{text:"Gestisci Ordine",handler:function(){
									 var selected = grid.getSelectionModel().getSelected();
		                                 if(selected) {
										  manage_order(selected,{token:'<%=form_authenticity_token%>'})
		                                 } else { 
		                                   alert('<%=:grid_select_row.l%>.');
		                                 }
									
									}
									
								},
								{ id: 'elimina_btn', iconCls:'icon_delete',type:"submit", text: '<%=:l_delete.localize%>',  handler:function(){
									 var selected = grid.getSelectionModel().getSelected();
		                                 if(selected) {
										  delete_order(selected,<%=@default_grid_page_size%>);
		                                 } else { 
		                                   alert('<%=:grid_select_row.l%>.');
		                                 }
									
									}
									
								}
					]
					
				  }),
				  
				  
                  bbar: new Ext.PagingToolbar({
                            pageSize:  <%=@default_grid_page_size%>,
                            store: ds,
                            displayInfo: true,
                            displayMsg: 'Record {0} - {1} of {2}',
                            emptyMsg: 'Nessun record trovato.'
                  })
               
              });
			  grid.on("rowdblclick",function(grid, row, e){
			  	manage_order(grid.store.getAt(row),{token:'<%=form_authenticity_token%>'})
			  })
              ds.baseParams={fields:'',query:'',project_id:'<%=params[:project_id]%>'<%=',orderid:'+params[:orderid] if params[:orderid]%>}
              ds.load({
                          params: { 
                                    start: 0, 
                                    limit: <%=@default_grid_page_size%>,
                                    fields:'',
                                    query:''
                                    
                                    }
                        });

          });
		  

//]]>
</script>
<div id="orders-win" class="x-hidden">
    <div class="x-window-header">
        Informazioni per la gestione dell'ordine
    </div>
    <div class="x-window-body">
        <div id="manage-order">
        </div>
	</div>
</div>
